tipos de sistemas operativos:

sistemas de operativos de computadoras personales

sistemas operativos integrados que tambien se conocen como incrustrados o embebidos, operan
en las computadoras que controlan dispositivos que no se consideran generalmente como computadoras, ya que no aceptan software instalado por el usuario. Algunos ejemplso comunes son los hornos de microondas.
Sistemas operativos de nodos sensores
Las redes de pequeñños nodos sensores se estan implmentando para varios fines. Estos nodos son pequeñas computadoras que se comunican entre si con una estaacion base, mediante el uso de comunicacion inalambrica
Sistemas operativos de tiempo real
Se caracterizan por tener el tiempo como un parametro clave. por eje mplo, en los sistemas de control de procesos industriales, las computadoras en tiempo real tienen que recolectar datos acerca del proceso de produccion y utilizarlos para controlar las maquinas en la fabrica



* TAREA: Imprimir la imagen que nos va a mandar

que es el cache
que es el sistema operativo
generaciones de computadoras(distinciones)
procesamiento por lotes
que es el spool
que es el procesador
que es el contador, pila y psw, las canalizaciones
memoria cmos: es una memoria que guarda los datos por 20 minutos aproximadamente
el vector de interrupciones es una tabla de memoria 
un proceso es un programa en ejecución  todo el entorno para poder hacerlo ejecutar 
el cocinero es el sistema operativo, el progframa es la receta con la que hae las galletas, perro la receta sin nada, no sirve
exokernel es como una maquina virtual


---------------------------------------------------------------------------------------------------------------------------------------------
ejemplo de examen

fun PROG A {
	for (i = 0 to 1){
		x = fork();
		si (x =0){
			y = fork(); // C:\Users\angel\OneDrive\Pictures\Álbum de cámara\20180827_112611
		}
	}
}



el rpoceso se bloque para recir entrada el planificador selcciona otro proceso


puntes de capata 
---------------------------------------------------------------------------------------------------------------------------------------------
Codigo de capta (canalización de 3 etapas):

A). Hacer dos arreglos de tipo byte, uno de 2 bytes para guardar la instruccion y los registros origen y destino. El otro de 4 bytes para guardar el dato en caso que la instruccion sea de 6 bytes. Ponerlos de manera global (static).

B). Obtener el registro BP y el IP (que deben contener de 4 bytes c/u). Convertirlos a su representación  flotante y sumarlos para obtener la dirección de la RAM a partir de donde se van a leer los 6 bytes de la instruccion (siempre leeremos 6 independientemente si la instruccion mide 2 o 6), los dos primeros bytes ponerlos en el arreglo de 2 bytes, los 4 siguientes en el arreglo de 4 bytes. Esto es todo lo que hace el módulo de "capta" de la canalización de 3 etapas.


======================================================================================
Código de traduce (canalización de 3 etapas):

A). Obtener el primer bit del byte de la instrucción, si bit=1 y la PSW[15] no es true, desplegar mensaje de "Violacion de accesso al modo kernel" y abortar el programa.

B). Si no hubo violación, convertir el primer byte del buffer de 2 bytes a entero ya que es el código de la instrucción, este valor entero meterlo en la variable "cod_inst".

C). Obtener el 2o. bit de instrucción (segura o insegura) y guardarlo (S=0 o bien S=1 dependiendo del bit).

D). Obtener el 3er. bit de longitud de la instrucción (L=0 o bien L=1 dependiendo del bit).

E). Calcular el largo de la instrucción con el bit anterior LARGO = 2 + L x 4  (nos da 2 o 6)

F). Si LARGO=6, entonces poner en la variable entera "dato" los 4 bytes del arreglo de 4 bytes (en representación entera), si LARGO no es 6, entonces no hacer nada, la variable dato se quedará con lo que alguna vez tuvo y no nos interesa.

G). Tomar el IP (que es de 4 bytes) convertirlo a flotante y sumarle el largo obtenido en E) (que puede ser 2 o 6).

H). Tomar el nuevo valor que tendrá IP calculado en G), convertirlo a 4 bytes y actualizar IP con ese valor.

I). Obtener el valor del registro OI (que son 4 bytes), convertirlo a un numero flotante, digamos "F".

J). Calcular el nuevo valor de OI mediante S x ( F + S x L ), este valor obtenido convertirlo a 4 bytes y almacenarlo como nuevo valor de OI.

K). Tomar el byte que corresponde a origen y destino (el segundo byte del arreglo de 2 bytes) y partirlo en 2 nibbles, el valor entero del primer nibble se mete a la variable "orig", y el valor entero del segundo nibble se mete a la variable "dest".

Esto es todo lo que hace el traductor de la canalización de 3 etapas. 

========================================================================




Tarea 17/10/18

-Programar un quantum para que determine el tiempo en que se generen las interrupciones.
-Un algoritmo para colas circular que desperdicie una casilla y otro que no desperdicie ninguna (Meter algo en la cola y sacar algo de la cola).
-Generar un subproceso que alimente la cola, y la computadora virtual tiene que checar la cola o generar un toque a la computadora cuando esta tenga un elemento
*Investigar el sinchronize de java

https://docs.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html






=====================================================================================
Formulas para el tema de maquina virtual

dirVirt/tamBloque = bloque 

bloq * tamañoBloq = inicioBloque

desplazamiento = DireccionVirtual - InicioBloque

direccionFisica = NumeroBloque + desplazamiento 